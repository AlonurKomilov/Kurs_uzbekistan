services:
  db:
    image: postgres:16
    container_name: kubot_db
    environment:
      POSTGRES_USER: kubot
      POSTGRES_PASSWORD: kubot_password
      POSTGRES_DB: kubot
    ports:
      - "5432:5432"
    volumes:
      - kubot_postgres_data:/var/lib/postgresql/data
    networks:
      - kubot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kubot -d kubot"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: kubot_api
    environment:
      - DATABASE_URL=postgresql+asyncpg://kubot:kubot_password@db:5432/kubot
      - BOT_TOKEN=${BOT_TOKEN:-fake_token_for_dev}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kubot_network
    volumes:
      - ./api:/app/api
      - ./core:/app/core
      - ./infrastructure:/app/infrastructure
      - ./repositories:/app/repositories

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: kubot_bot
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DATABASE_URL=postgresql+asyncpg://kubot:kubot_password@db:5432/kubot
      - TWA_BASE_URL=${TWA_BASE_URL:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kubot_network
    volumes:
      - ./bot:/app/bot
      - ./core:/app/core
      - ./infrastructure:/app/infrastructure
      - ./locales:/app/locales

  collectors:
    build:
      context: .
      dockerfile: collectors/Dockerfile
    container_name: kubot_collectors
    environment:
      - DATABASE_URL=postgresql+asyncpg://kubot:kubot_password@db:5432/kubot
    depends_on:
      - db
    networks:
      - kubot_network
    volumes:
      - ./collectors:/app/collectors
      - ./core:/app/core
      - ./infrastructure:/app/infrastructure

  twa:
    build:
      context: ./twa
      dockerfile: Dockerfile
    container_name: kubot_twa
    environment:
      - DOCKER_ENV=true
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    networks:
      - kubot_network
    volumes:
      - ./twa:/app
      - /app/node_modules
    depends_on:
      - api

volumes:
  kubot_postgres_data:

networks:
  kubot_network:
    driver: bridge